version: "3.8"

services:
  # BackEnd
  backendservice1:
    container_name: apiserver1
    build:
      context: .
      dockerfile: BackEnd.dockerfile
    env_file:
      - BackEnd.env

  backendservice2:
    container_name: apiserver2
    build:
      context: .
      dockerfile: BackEnd.dockerfile
    env_file:
      - BackEnd.env

  backendservice3:
    container_name: apiserver3
    build:
      context: .
      dockerfile: BackEnd.dockerfile
    env_file:
      - BackEnd.env

  # FrontEnd
  frontendservice1:
    container_name: webappserver1
    build:
      context: .
      dockerfile: FrontEnd.dockerfile
    env_file:
      - FrontEnd.env

  frontendservice2:
    container_name: webappserver2
    build:
      context: .
      dockerfile: FrontEnd.dockerfile
    env_file:
      - FrontEnd.env

  frontendservice3:
    container_name: webappserver3
    build:
      context: .
      dockerfile: FrontEnd.dockerfile
    env_file:
      - FrontEnd.env

  # NGINX
  apigatewayservice:
    container_name: apigatewayservice
    build:
      context: .
      dockerfile: APIGatewayNginx.dockerfile
    ports:
      - "80:80"
    depends_on:
      - backendservice1
      - backendservice2
      - backendservice3
      - frontendservice1
      - frontendservice2
      - frontendservice3

  # MongoDB
  mongodbservice:
    container_name: mongodbservice1
    image: mongo:latest
    restart: always
    volumes:
      - mongo_data:/data/db

  # Redis
  redisservice:
    container_name: RedisService
    image: redis:latest
    restart: always
    volumes:
      - redis_data:/data/db

volumes:
  mongo_data: {}
  redis_data: {}
